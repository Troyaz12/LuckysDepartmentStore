@using LuckysDepartmentStore.Models.ViewModels.Consumer
@model List<ShippingAddressVM>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<head>
    <!-- Include Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-beta1/css/bootstrap.min.css" rel="stylesheet">

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script> 
 @*    <script src="https://ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.19.2/jquery.validate.min.js"></script> *@

</head>


<div class="row">
    <div class="col-md-4">
        @for (int i=0; i < Model.Count; i++)
        {
            <div class="form-check">
                <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1">
                <label class="form-check-label" for="flexRadioDefault1">
                   <span>
                       @Model[i].FirstName
                   </span>
                    <span>
                        @Model[i].LastName
                    </span>
                    <span>
                        @Model[i].Address1
                    </span>
                    <span>
                        @Model[i].Address2
                    </span>
                    <span>
                        @Model[i].City
                    </span>
                    <span>
                        @Model[i].State
                    </span>
                    <span>
                        @Model[i].ZipCode
                    </span>
                </label>
            </div>
        }     
        <p><a href="" class="link-underline-primary">Edit Address</a></p>
        <div class="row">
            <div class="col-md-12">
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-primary mt-4" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                    Add Shipping Address
                </button>

                <!-- Modal -->
                <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="staticBackdropLabel">Add Shipping Address</h1>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <label for="FirstName">First Name</label>
                                <input name="FirstName" id="FirstName" class="form-control">

                                <label for="LastName">Last Name</label>
                                <input name="LastName" id="LastName" class="form-control">

                                <label for="Address1">Address1</label>
                                <input name="Address1" id="Address1" class="form-control">

                                <label for="Address2">Address2</label>
                                <input name="Address2" id="Address2" class="form-control">

                                <label for="City">City</label>
                                <input name="City" id="City" class="form-control">

                                <label for="State">State</label>
                                <input name="State" id="State" class="form-control">

                                <label for="ZipCode">ZipCode</label>
                                <input name="ZipCode" id="ZipCode" class="form-control">
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button id="save" type="button" class="btn btn-primary">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
    </div>
</div>



<script>
    $(document).ready(function () {

        $('#save').on('click', function (e) {
            e.preventDefault();

            console.log("Test1");

            var FirstName = $('#FirstName').val(); // Assuming data-selected is set when color is selected
            var LastName = $('#LastName').val(); // Assuming data-selected is set when color is selected
            var Address1 = $('#Address1').val(); // Assuming data-selected is set when color is selected
            var Address2 = $('#Address2').val() || null; // Assuming data-selected is set when color is selected
            var City = $('#City').val();
            var State = $('#State').val();
            var ZipCode = $('#ZipCode').val();

            console.log("Test2");

            var item = {
                FirstName: FirstName,
                LastName: LastName,
                Address1: Address1,
                Address2: Address2,
                City: City,
                State: State,
                ZipCode: ZipCode
            };
            console.log("Test2.5 " + item);
            $.ajax({
                url: '@Url.Action("CreateShippingAddress", "Consumer")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(item),

                success: function (data) {
                   // $("#dynamicList").html(data);
                    console.log("Test3");

                    $("#FirstName").val('');
                    $("#LastName").val('');
                    $("#Address1").val('');
                    $("#Address2").val('');
                    $('#City').val('');
                    $("#State").val('');
                    $('#ZipCode').val('');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                     console.log("Test4 - jqXHR: ", jqXHR);
                    console.log("Text Status: ", textStatus);
                    console.log("Error Thrown: ", errorThrown);
    
                    alert("Error updating list: " + errorThrown);
                }
            });
        });

    });
</script>