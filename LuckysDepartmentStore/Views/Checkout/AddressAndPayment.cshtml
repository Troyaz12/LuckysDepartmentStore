@model LuckysDepartmentStore.Models.ViewModels.Checkout.OrderModelVM
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{  

   

}
 <head>
         <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add a product</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-beta1/css/bootstrap.min.css" rel="stylesheet">
    @* <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script> *@
    <script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-beta1/js/bootstrap.min.js"></script>
    <!-- Ensure these scripts are included for client-side validation -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.19.2/jquery.validate.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.min.js"></script>
 </head>

 <form id="addressForm" asp-action="AddressAndPayment" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
     <h2>Address And Payment</h2>

    <div class="scrollable-section mt-2" id="shippingAddressList">
        @Html.Partial("_ShippingPartial", Model.Shipping)
    </div>
    <p><a href="" class="link-underline-primary">Edit Address</a></p>
    <div class="row">
        <div class="col-md-12">
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-primary mt-4" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                Add Shipping Address
            </button>

            <!-- Modal -->
            <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="staticBackdropLabel">Add Shipping Address</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <label for="FirstName">First Name</label>
                            <input name="FirstName" id="FirstName" class="form-control">

                            <label for="LastName">Last Name</label>
                            <input name="LastName" id="LastName" class="form-control">

                            <label for="Address1">Address1</label>
                            <input name="Address1" id="Address1" class="form-control">

                            <label for="Address2">Address2</label>
                            <input name="Address2" id="Address2" class="form-control">

                            <label for="City">City</label>
                            <input name="City" id="City" class="form-control">

                            <label for="State">State</label>
                            <input name="State" id="State" class="form-control">

                            <label for="ZipCode">ZipCode</label>
                            <input name="ZipCode" id="ZipCode" class="form-control">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button id="save" type="button" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
     <hr />
        <div class="scrollable-section mt-2" id="paymentOptionList">
        @await Html.PartialAsync("_PaymentPartial", Model.Payment)
     </div>

    <p><a href="" class="link-underline-primary">Edit Payment Method</a></p>
    <div class="row">
        <div class="col-md-12">
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-primary mt-4" data-bs-toggle="modal" data-bs-target="#paymentBackdrop">
                Add Payment Method
            </button>

            <!-- Modal -->
            <div class="modal fade" id="paymentBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="paymentBackdropLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="paymentBackdropLabel">Add Payment Method</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <label for="FirstName">First Name</label>
                            <input name="FirstName" id="FirstNamePay" class="form-control">

                            <label for="LastName">Last Name</label>
                            <input name="LastName" id="LastNamePay" class="form-control">

                            <label for="AccountNumber">Credit Card Number</label>
                            <input name="AccountNumber" id="AccountNumber" class="form-control">

                            <label for="BillingAddress1">Address 1</label>
                            <input name="BillingAddress1" id="BillingAddress1" class="form-control">

                            <label for="BillingAddress2">Address 2</label>
                            <input name="BillingAddress2" id="BillingAddress2" class="form-control">

                            <label for="City">City</label>
                            <input name="City" id="CityPay" class="form-control">

                            <label for="State">State</label>
                            <input name="State" id="StatePay" class="form-control">

                            <label for="ZipCode">ZipCode</label>
                            <input name="ZipCode" id="ZipCodePay" class="form-control">

                            <label for="CvcCode">CvcCode</label>
                            <input name="CvcCode" id="CvcCode" class="form-control">

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button id="savePayment" type="button" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<input type="submit" value="Submit Order" />

</form>

<script>
    $(document).ready(function () {
   
        $('#save').on('click', function (e) {
            e.preventDefault();

            var FirstName = $('#FirstName').val();
            var LastName = $('#LastName').val();
            var Address1 = $('#Address1').val();
            var Address2 = $('#Address2').val() || null;
            var City = $('#City').val();
            var State = $('#State').val();
            var ZipCode = $('#ZipCode').val();
            var SelectedShippingAddressID = $('#SelectedShippingAddressID').val();

            var item = {
                FirstName: FirstName,
                LastName: LastName,
                Address1: Address1,
                Address2: Address2,
                City: City,
                State: State,
                ZipCode: ZipCode
            };
       
            $.ajax({
                url: '@Url.Action("CreateShippingAddress", "Consumer")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(item),

                success: function (data) {
                    $("#shippingAddressList").html(data);

                    // Clear input fields after successful addition
                    $("#FirstName").val('');
                    $("#LastName").val('');
                    $("#Address1").val('');
                    $("#Address2").val('');
                    $('#City').val('');
                    $("#State").val('');
                    $('#ZipCode').val('');

                    try {
                    
                        // console.log("test dialog5: ");
                        // console.log(typeof $.fn.modal); // Should output "function" if Bootstrap is loaded correctly
                        // console.log(typeof bootstrap); // Should still be an object                        
                        $('#staticBackdrop').modal('hide');
                  
                    } catch (error) {
                        console.error("Error hiding modal:", error);
                    }

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error updating list: " + errorThrown);
                }
            });
        });

         $('#savePayment').on('click', function (e) {
          e.preventDefault();

          var FirstName = $('#FirstNamePay').val();
          var LastName = $('#LastNamePay').val();
          var BillingAddress1 = $('#BillingAddress1').val();
          var BillingAddress2 = $('#BillingAddress2').val() || null; 
          var City = $('#CityPay').val();
          var State = $('#StatePay').val();
          var ZipCode = $('#ZipCodePay').val();
          var AccountNumber = $('#AccountNumber').val();
          var CvcCode = $('#CvcCode').val();


          var item = {
              FirstName: FirstName,
              LastName: LastName,
              BillingAddress1: BillingAddress1,
              BillingAddress2: BillingAddress2,
              City: City,
              State: State,
              ZipCode: ZipCode,
              AccountNumber: AccountNumber,
              CvcCode: CvcCode
          };
          $.ajax({
              url: '@Url.Action("CreatePaymentOption", "Consumer")',
              type: 'POST',
              contentType: 'application/json',
              data: JSON.stringify(item),

              success: function (data) {
                  $("#paymentOptionList").html(data);
                  console.log("Test3");

                  $("#FirstNamePay").val('');
                  $("#LastNamePay").val('');
                  $("#BillingAddress1").val('');
                  $("#BillingAddress2").val('');
                  $('#CityPay').val('');
                  $("#StatePay").val('');
                  $('#ZipCodePay').val('');
                  $('#AccountNumber').val('');
                  $('#CvcCode').val('');

                  $('#paymentBackdrop').modal('hide');
              },
              error: function (jqXHR, textStatus, errorThrown) {
                  alert("Error updating list: " + errorThrown);
              }
          });
      });

      $('#editShippingBackdrop').on('show.bs.modal', function (event) {
          var button = $(event.relatedTarget); // Button that triggered the modal
              console.log(button); // Log the button element for inspection
          var firstName = button.data('firstnameedit');
          var lastName = button.data('lastnameedit');
          var address1 = button.data('address1edit');
          var address2 = button.data('address2edit');
          var city = button.data('cityedit');
          var state = button.data('stateedit');
          var zipcode = button.data('zipcodeedit');
          var ShippingAddressID = button.data('shippingaddressid');

          console.log(ShippingAddressID + " " + firstName);
          // Update the modal's input fields
          var modal = $(this);
          modal.find('#FirstNameEdit').val(firstName);
          modal.find('#LastNameEdit').val(lastName);
          modal.find('#Address1Edit').val(address1);
          modal.find('#Address2Edit').val(address2);
          modal.find('#CityEdit').val(city);
          modal.find('#StateEdit').val(state);
          modal.find('#ZipCodeEdit').val(zipcode);
          modal.find('#SelectedShippingAddressID').val(ShippingAddressID);
      });

       $('#saveBtn').on('click', function () {
          var modal = $('#editShippingBackdrop');
          console.log(modal.find('#SelectedShippingAddressID').val());
          var shippingAddress = {
              FirstName: modal.find('#FirstNameEdit').val(),
              LastName: modal.find('#LastNameEdit').val(),
              Address1: modal.find('#Address1Edit').val(),
              Address2: modal.find('#Address2Edit').val(),
              City: modal.find('#CityEdit').val(),
              State: modal.find('#StateEdit').val(),
              ZipCode: modal.find('#ZipCodeEdit').val(),
              ShippingAddressID: modal.find('#SelectedShippingAddressID').val(),
          };

          // Send the updated data to the server using AJAX
          $.ajax({
              url: '@Url.Action("EditShippingAddress", "Consumer")',
              type: 'POST',
              contentType: 'application/json',
              data: JSON.stringify(shippingAddress),
              success: function (data) {
                // Handle the success response                
                $("#shippingAddressList").html(data);
              },
              error: function () {
                  alert('Error occurred while saving the data.');
              }
          });

          // Close the modal
          modal.modal('hide');
      });



          $(document).on("click", ".delete-btn", function () {
              var button = $(this);
              var id = button.data("id");

              if (!confirm("Are you sure you want to delete this address?")) {
                  return;
              }

              $.ajax({
                  url: '@Url.Action("Delete", "Consumer")',
                  type: "POST",
                  contentType: "application/json",
                  data: JSON.stringify(id),
                  success: function (response) {
                      if (response.success) {
                          // Select the address container (the div with class "col-md-12 mb-3")
                          var addressRow = button.closest(".mb-2").prev(".col-md-12");

                          if (addressRow.length > 0) {
                              addressRow.fadeOut(300, function () {
                                  $(this).remove();  // Remove the address container from the DOM
                              });
                          } else {
                              console.log("Address row not found.");
                          }
                          // Select and remove the delete button container (the div with class "mb-2")
                          var buttonContainer = button.closest(".mb-2");
                          if (buttonContainer.length > 0) {
                              buttonContainer.fadeOut(300, function () {
                                  $(this).remove();  // Remove the button container from the DOM
                              });
                          } else {
                              console.log("Button container not found.");
                          }

                      } else {
                          alert("Failed to delete address.");
                      }
                  },
                  error: function () {
                      alert("An error occurred while deleting the address.");
                  }
              });
          });






    });
</script>
