@model LuckysDepartmentStore.Models.ViewModels.Checkout.OrderModelVM
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{  

    <head>
        <!-- Include Bootstrap CSS -->
        <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-beta1/css/bootstrap.min.css" rel="stylesheet">

        <!-- Include jQuery -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

        <!-- Include Bootstrap JS -->
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-beta1/js/bootstrap.bundle.min.js"></script>
    </head>





}

<form id="productForm" asp-action="AddressAndPayment" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
     <h2>Address And Payment</h2>

    <div class="scrollable-section mt-2" id="shippingAddressList">
        @Html.Partial("_ShippingPartial", Model.Shipping)
    </div>
    <p><a href="" class="link-underline-primary">Edit Address</a></p>
    <div class="row">
        <div class="col-md-12">
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-primary mt-4" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                Add Shipping Address
            </button>

            <!-- Modal -->
            <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="staticBackdropLabel">Add Shipping Address</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <label for="FirstName">First Name</label>
                            <input name="FirstName" id="FirstName" class="form-control">

                            <label for="LastName">Last Name</label>
                            <input name="LastName" id="LastName" class="form-control">

                            <label for="Address1">Address1</label>
                            <input name="Address1" id="Address1" class="form-control">

                            <label for="Address2">Address2</label>
                            <input name="Address2" id="Address2" class="form-control">

                            <label for="City">City</label>
                            <input name="City" id="City" class="form-control">

                            <label for="State">State</label>
                            <input name="State" id="State" class="form-control">

                            <label for="ZipCode">ZipCode</label>
                            <input name="ZipCode" id="ZipCode" class="form-control">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button id="save" type="button" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
     <hr />

     <div class="scrollable-section mt-2" id="paymentOptionList">
        @await Html.PartialAsync("_PaymentPartial", Model.Payment)
     </div>

    <p><a href="" class="link-underline-primary">Edit Payment Method</a></p>
    <div class="row">
        <div class="col-md-12">
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-primary mt-4" data-bs-toggle="modal" data-bs-target="#paymentBackdrop">
                Add Payment Method
            </button>

            <!-- Modal -->
            <div class="modal fade" id="paymentBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="paymentBackdropLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="paymentBackdropLabel">Add Payment Method</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <label for="FirstName">First Name</label>
                            <input name="FirstName" id="FirstNamePay" class="form-control">

                            <label for="LastName">Last Name</label>
                            <input name="LastName" id="LastNamePay" class="form-control">

                            <label for="AccountNumber">Credit Card Number</label>
                            <input name="AccountNumber" id="AccountNumber" class="form-control">

                            <label for="BillingAddress1">Address 1</label>
                            <input name="BillingAddress1" id="BillingAddress1" class="form-control">

                            <label for="BillingAddress2">Address 2</label>
                            <input name="BillingAddress2" id="BillingAddress2" class="form-control">

                            <label for="City">City</label>
                            <input name="City" id="CityPay" class="form-control">

                            <label for="State">State</label>
                            <input name="State" id="StatePay" class="form-control">

                            <label for="ZipCode">ZipCode</label>
                            <input name="ZipCode" id="ZipCodePay" class="form-control">

                            <label for="CvcCode">CvcCode</label>
                            <input name="CvcCode" id="CvcCode" class="form-control">

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button id="savePayment" type="button" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <input type="submit" value="Submit Order" />

</form>


<script>
    $(document).ready(function () {


        // $(document).on('hidden.bs.modal', '#staticBackdrop', function () {
        //     console.log("Modal closed. Cleaning up backdrop...");
        //     $('body').removeClass('modal-open'); // Prevent scrolling lock
        //     $('.modal-backdrop').remove(); // Remove lingering grey overlay
        // });
        // $(document).ajaxComplete(function () {
        //     console.log("Modal hide");
        //     var myModal = new bootstrap.Modal(document.getElementById('staticBackdrop'));
        //     myModal.hide();
        // });


    
        // Function to gather all address data from the partial view
        var gatherAddresses = function () {
            var addresses = [];
            $('#shippingContainer li').each(function (index, element) {
                var address = {
                    FirstName: $(element).find('input[name*=".FirstName"]').val(),
                    LastName: $(element).find('input[name*=".LastName"]').val(),
                    Address1: $(element).find('input[name*=".Address1"]').val(),
                    Address2: $(element).find('input[name*=".Address2"]').val(),
                    City: $(element).find('input[name*=".City"]').val(),
                    State: $(element).find('input[name*=".State"]').val(),
                    ZipCode: $(element).find('input[name*=".ZipCode"]').val(),
                    ShippingAddressID: $(element).find('input[name*=".ShippingAddressID"]').val()



                };
                console.log(`Address ${index + 1}:`, address);
                addresses.push(address);
            });
            return addresses;
        };



        $('#save').on('click', function (e) {
            e.preventDefault();

            var FirstName = $('#FirstName').val();
            var LastName = $('#LastName').val();
            var Address1 = $('#Address1').val();
            var Address2 = $('#Address2').val() || null;
            var City = $('#City').val();
            var State = $('#State').val();
            var ZipCode = $('#ZipCode').val();
            var SelectedShippingAddressID = $('#SelectedShippingAddressID').val();

            var item = {
                FirstName: FirstName,
                LastName: LastName,
                Address1: Address1,
                Address2: Address2,
                City: City,
                State: State,
                ZipCode: ZipCode
            };
            console.log("test dialog1: ");

            var currentAddresses = gatherAddresses();
            console.log("test dialog2: ");
            currentAddresses.push(item);

            console.log("test dialog3: ");

            var allData = {
                AddressList: currentAddresses
            }
         
            $.ajax({
                url: '@Url.Action("CreateShippingAddress", "Consumer")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(item),


                success: function (data) {
                    console.log("Server response:", data);
                 //   $("#shippingAddressList").html(data);

                    // Clear input fields after successful addition
                    // $("#FirstName").val('');
                    // $("#LastName").val('');
                    // $("#Address1").val('');
                    // $("#Address2").val('');
                    // $('#City').val('');
                    // $("#State").val('');
                    // $('#ZipCode').val('');

                    console.log("test dialog4: ");


                    try {
                    
                        console.log("test dialog5: ");
                        console.log(typeof $.fn.modal); // Should output "function" if Bootstrap is loaded correctly
                        console.log(typeof bootstrap); // Should still be an object

                        if (typeof $.fn.modal === "undefined") {
                            console.log("Bootstrap modal is undefined. Reinitializing...");
                            $.fn.modal = bootstrap.Modal;
                        }
                        // After saving, manually hide modal
                        var modalElement = document.getElementById('staticBackdrop');
                        var modal = new bootstrap.Modal(modalElement);
                        modal.hide();
                    
                        // $('#staticBackdrop').modal('hide');
                        $("#shippingAddressList").append(data);
                        console.log("test dialog6: ");
                    } catch (error) {
                        console.error("Error hiding modal:", error);
                    }

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error updating list: " + errorThrown);
                }
            });
        });
        // Reset modal on close
        $('#staticBackdrop').on('hidden.bs.modal', function () {
            resetModal();
        });

    });
</script>