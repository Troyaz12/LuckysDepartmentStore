@using LuckysDepartmentStore.Utilities
<!DOCTYPE html>
<html>
@model ExecutionResult<LuckysDepartmentStore.Models.ViewModels.Home.ItemVM>
@{
    ViewData["Title"] = "Item";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flex Column Example</title>
    
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-beta1/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-beta1/js/bootstrap.min.js"></script>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>

    <body>
        <div class="container">
            @if(Model.IsSuccess)
            {
                <div class="d-flex flex-row w-100">              

                    <img src="@Model.Data.ProductImage" id="ProductImage" name="ProductImage" class="image-fluid image-containerItem item" alt="Product Image">

                    <div class="d-flex flex-column">
                        <div class="p-2 text-black">
                            <h1>@Model.Data.BrandSelection</h1>
                            <h3>@Model.Data.ProductName</h3>
                            <div>
                            @Model.Data.Description
                            </div>
                        </div>
                        <div class="p-2 text-black">

                            @if (Model.Data.RatingsCount != 0)
                            {
                                <p>
                                    <i class="fa-solid fa-star"></i> 
                                    <span>
                                        @string.Format("{0:F1}", @Model.Data.Stars)
                                    </span>

                                    (@Model.Data.RatingsCount)
                                </p>
                            }
                            else
                            {
                                <p>
                                    <i class="fa-solid fa-star"></i>
                                    <span>
                                        No reviews yet
                                    </span>
                                </p>                    
                            }

                        </div>
                        <div class="text-black">

                        @if(Model.Data.DiscountAmount != 0 && Model.Data.DiscountPercent != 0 )
                        {
                            <span>
                                @string.Format("{0:C}",@Model.Data.Price)
                            </span>
                        }
                        else
                        {                        
                            <div style="padding-top:5px;">
                                <p class="card-text" style="text-decoration: line-through;">@string.Format("{0:C2}", @Model.Data.Price)</p>
                                <p>
                                     Discount:
                                     @if (@Model.Data.DiscountAmount != null && @Model.Data.DiscountAmount > 0)
                                     {
                                        <span>-@Model.Data.DiscountAmount</span>
                                     }
                                    @if (@Model.Data.DiscountPercent != null && @Model.Data.DiscountPercent > 0)
                                     {
                                         <span>@string.Format("{0:0}%", @Model.Data.DiscountPercent * 100)</span>
                                     }
                                 </p>
                                <p>Sale Price: <span class="card-text" style="color: red;">@string.Format("{0:C2}", @Model.Data.SalePrice)</span></p>
                            </div>
                        }
                        </div>
                        <span class="pt-2">Size</span>
                        <div class="pl-2 pb-2 text-white" id="sizesContainer">
            
                    
                        </div>

                        <span class="pt-2">Color</span>
                        <div id="ColorsContainer" class="pl-2">
                            @if (Model.Data.ColorProduct != null && @Model.Data.Color != null)
                            {
                                @for (var x = 0; x < @Model.Data.Color.Count; x++)
                                {
                                    <input type="radio" class="btn-check options-radio" value="@Model.Data.ColorProduct[x].ColorID" name="options" id="option@(x)" autocomplete="off" @(x == 0 ? "checked" : "")>
                                    <label class="btn gold-btn" for="option@(x)">@Model.Data.ColorProduct[x].Name</label>
                                }
                            }
                        </div>


                        <form id="addToCartForm" asp-controller="ShoppingCart" asp-action="AddToCart" enctype="multipart/form-data">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <input type="hidden" id="ProductID" name="ProductID" value="@Model.Data.ProductID">
                            <input type="hidden" id="Price" name="Price" value="@Model.Data.Price">
                            <input type="hidden" id="ColorSelection" name="ColorSelection" value="@Model.Data.ColorSelection">
                            <input type="hidden" id="SizeSelection" name="SizeSelection" value="@Model.Data.SizeSelection">
                            <input type="hidden" id="ProductImage" name="ProductImage" value="@Model.Data.ProductImage">
                            <input type="hidden" id="ProductName" name="ProductName" value="@Model.Data.ProductName">
                        <input type="hidden" name="ColorID" id="ColorID" value="@Model.Data.ColorProduct[0].ColorID" />

                            <div class="p-1">
                    
                                <label asp-for="Data.Quantity" class="control-label"></label>
                                <input asp-for="Data.Quantity" type="number" class="form-control" id="Quantity" />

                            </div>
                            <div class="p-2 text-white">
                                <input type="submit" id="addToCartButton" value="Add To Cart" class="btn btn-info mt-1 w-100" style="background-color: gold" />
                            </div>

                        </form>
                    </div>
                </div>
            }
            else
            {
                <p>Could not retrieve item.</p>
            }

        </div>

    </body>
</html>
    <script>
        $(document).ready(function () {
            $('.options-radio').change(function (event) {
                updateSizes(event);
            });

            updateSizes();
            document.getElementById("ColorSelection").value = @Model.Data.ColorProduct[0].ColorID;


            function updateSizes(event){

                var selectedRadio = event ? $(event.target) : $('.options-radio:checked');
                var selectedRadioId = selectedRadio.attr('id');

                var colorSelected = $('label[for="' + selectedRadioId + '"]').text();

                console.log(colorSelected + " this " + selectedRadioId);
                var objectArray = [];

                @foreach (var colorProduct in Model.Data.ColorProduct)
                {
                    <text>
                        objectArray.push({
                        Name: "@colorProduct.Name",
                        SizeID: @colorProduct.SizeID,
                        SizeName: "@colorProduct.SizeName",
                        Quantity: @colorProduct.Quantity,
                        ColorProductID: @colorProduct.ColorProductID,
                        ProductID: @colorProduct.ProductID,
                        ColorID: @colorProduct.ColorID,
                        SelectedColor: colorSelected
                    });
                    </text>
                }

                $.ajax({
                    url: '@Url.Action("GetSizeButtons", "Home")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(objectArray),
                    success: function (response) {
                        $('#sizesContainer').html(response);
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = xhr.status + ': ' + xhr.statusText;
                        alert('Error sending array of objects.' + errorMessage);
                    }
                });
            }

            $("#sizesContainer").on("click", "#sizes", function (e) {
                e.preventDefault();
                var index = $(this).data("index");
                var sizeID = $(this).data("sizeid");
                $("#SizeSelection").val(sizeID);
                // Remove 'selected' class from all buttons 
                $("#sizesContainer .size-button").removeClass("selected"); // Add 'selected' class to the clicked button 
                $(this).addClass("selected");
               


            });
            document.querySelectorAll('input[name="options"]').forEach((elem) => {
             
                elem.addEventListener("change", function (event) {    
                document.getElementById("ColorSelection").value = event.target.value;
                });
            });
        });
    </script>

