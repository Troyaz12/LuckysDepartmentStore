@using LuckysDepartmentStore.Utilities
@using Newtonsoft.Json
@model LuckysDepartmentStore.Models.ViewModels.Home.ItemVM
@{
    ViewData["Title"] = "Item";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flex Column Example</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-beta1/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-beta1/js/bootstrap.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>

<input type="hidden" id="ColorProduct" data-url="@Url.Action("GetSizeButtons", "Home")"
       data-products='@Html.Raw(JsonConvert.SerializeObject(Model.ColorProduct))'
       data-color-id='@Html.Raw(JsonConvert.SerializeObject(Model.ColorProduct.Select(p => p.ColorID).ToList()))' />

<div class="container">
   
         <div class="mb-3 ps-3">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Item</li>
                </ol>
            </nav>        
        </div>

        <div class="d-flex flex-row w-100">
            <img src="@Model.ProductImage" id="ProductImage" name="ProductImage" class="image-fluid image-containerItem item" alt="Product Image">
            <div class="d-flex flex-column w-50" >
                <div class="p-2 text-black">
                    <h1>@Model.BrandSelection</h1>
                    <h3>@Model.ProductName</h3>
                    <div>@Model.Description</div>
                </div>
                <div class="p-2 text-black">
                    @if (Model.RatingsCount != 0)
                    {
                        <p><i class="fa-solid fa-star"></i> <span>@string.Format("{0:F1}", @Model.Stars)</span> (@Model.RatingsCount)</p>
                    }
                    else
                    {
                        <p><i class="fa-solid fa-star"></i><span>No reviews yet</span></p>
                    }
                </div>
                <div class="text-black">
                    @if (Model.DiscountAmount != 0 && Model.DiscountPercent != 0)
                    {
                        <span>@string.Format("{0:C}", @Model.Price)</span>
                    }
                    else
                    {
                        <div style="padding-top:5px;">
                            <p class="card-text" style="text-decoration: line-through;">@string.Format("{0:C2}", @Model.Price)</p>
                            <p>
                                Discount:
                                @if (@Model.DiscountAmount != null && @Model.DiscountAmount > 0)
                                {
                                    <span>-@Model.DiscountAmount</span>
                                }
                                @if (@Model.DiscountPercent != null && @Model.DiscountPercent > 0)
                                {
                                    <span>@string.Format("{0:0}%", @Model.DiscountPercent * 100)</span>
                                }
                            </p>
                            <p>Sale Price: <span class="card-text" style="color: red;">@string.Format("{0:C2}", @Model.SalePrice)</span></p>
                        </div>
                    }
                </div>
                <span class="pt-2">Size</span>
                <div class="pl-2 pb-2 text-white" id="sizesContainer"></div>
                <span class="pt-2">Color</span>
                <div id="ColorsContainer" class="pl-2">
                    @if (Model.ColorProduct != null && Model.ColorProduct.Count > 0 && @Model.Color.Count > 0)
                    {
                        @for (var x = 0; x < @Model.Color.Count; x++)
                        {
                            <input type="radio" class="btn-check options-radio" value="@Model.ColorProduct[x].ColorID" name="options" id="option@(x)" autocomplete="off" @(x == 0 ? "checked" : "")>
                            <label class="btn gold-btn" for="option@(x)">@Model.Color[x]</label>
                        }
                    }
                </div>
                <form id="addToCartForm" asp-controller="ShoppingCart" asp-action="AddToCart" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" id="ProductID" name="ProductID" value="@Model.ProductID">
                    <input type="hidden" id="Price" name="Price" value="@Model.Price">
                    <input type="hidden" id="ColorSelection" name="ColorSelection" value="@Model.ColorSelection">
                    <input type="hidden" id="SizeSelection" name="SizeSelection" value="@Model.SizeSelection">
                    <input type="hidden" id="ProductImage" name="ProductImage" value="@Model.ProductImage">
                    <input type="hidden" id="ProductName" name="ProductName" value="@Model.ProductName">

                    @if (Model.ColorProduct != null && Model.ColorProduct.Count > 0)
                    {
                        <input type="hidden" name="ColorID" id="ColorID" value="@Model.ColorProduct[0].ColorID" />
                    }

                    <div class="p-1">
                        <label asp-for="Quantity" class="control-label"></label>
                        <input asp-for="Quantity" type="number" class="form-control w-25" id="Quantity" min="1"/>
                    </div>

                    <div class="p-2 text-white">
                        <input type="submit" id="addToCartButton" value="Add To Cart" class="btn btn-info mt-1 w-25" style="background-color: gold" />
                    </div>
                    <div id="validationSize" class="error-message">Please select a size.</div>
                    <div id="validationQuantity" class="error-message">Please include the quantity.</div>
                </form>
            </div>
        </div>     
    
</div>
<script src="~/js/item.js"></script>
